name: Docker Buil/Push Synsation Web

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      # 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: | 
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Create Output Directory
        run: |
          mkdir buildOutput
      - name: Generate SPDX SBOM
        run: |
          curl -Lo $RUNNER_TEMP/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
          chmod +x $RUNNER_TEMP/sbom-tool
          $RUNNER_TEMP/sbom-tool generate -b ./buildOutput -bc . -pn synsation-web -pv 1.0.0 -ps synsation-org -nsb https://synsation.io -V Verbose
  register-scitt-statements:
    runs-on: ubuntu-latest
    name: Register SCITT Signed Statement
    steps:
      - name: save-keys
        env:
          SIGNING_KEY: ${{ secrets.SYNSATION_SIGNING_KEY }}
        shell: bash
        run: |
          echo "$SIGNING_KEY" >> ./synsation.pem
          cat ./spdx/_manifest/spdx_2.2/manifest.spdx.json
      - name: Register SCITT Signed Statement
        id: register-scitt-signed-statement
        uses: datatrails/scitt-action@v0.3.7.39
        with:
          scitt-client_id: ${{ secrets.DATATRAILS_CLIENT_ID }}
          scitt-secret: ${{ secrets.DATATRAILS_SECRET }}
          feed: ${{ github.repository }}:v0.2
          payload: "./spdx/_manifest/spdx_2.2/manifest.spdx.json"
          signing-key-file: "./synsation.pem"
          issuer: "synsation.io"
      - name: cleanup-keys
        shell: bash
        run: |
          rm ./synsation.pem
