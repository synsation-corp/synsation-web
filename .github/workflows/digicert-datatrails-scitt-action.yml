name: Register SBOMs as DigiCert Signed SCITT Statement on DataTrails

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
env:
  DATATRAILS_CLIENT_ID: ${{ secrets.DATATRAILS_CLIENT_ID }}
  DATATRAILS_CLIENT_SECRET: ${{ secrets.DATATRAILS_CLIENT_SECRET }}
  SYNSATION_SIGNING_KEY: ${{ secrets.SYNSATION_SIGNING_KEY }}
  DIGICERT_STM_CERTIFICATE_ID: ${{ secrets.DIGICERT_STM_CERTIFICATE_ID }}
  DIGICERT_STM_API_BASE_URI: ${{ secrets.DIGICERT_STM_API_BASE_URI }}
  DIGICERT_STM_API_CLIENTAUTH_P12_PASSWORD: ${{ secrets.DIGICERT_STM_API_CLIENTAUTH_P12_PASSWORD }}
  DIGICERT_STM_API_CLIENTAUTH_P12_B64: ${{ secrets.DIGICERT_STM_API_CLIENTAUTH_P12_B64 }}
  DIGICERT_STM_API_KEY: ${{ secrets.DIGICERT_STM_API_KEY }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
jobs:
  build-image-register-DataTrails-SCITT:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: | 
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Create buildOutput Directory
        run: |
          mkdir -p ./buildOutput/
      - name: Create Compliance Statement
        # A sample compliance file. Replace with an SBOM, in-toto statement, image for content authenticity, ...
        run: |
          echo '{"author": "fred", "title": "my biography", "reviews": "awesome"}' > ./buildOutput/attestation.json
      - name: Upload Attestation
        id: upload-attestation
        uses: actions/upload-artifact@v4
        with:
          name: attestation.json
          path: ./buildOutput/attestation.json
      - name: Register Attestation as a SCITT Signed Statement
        id: register-compliance-scitt-digicert-signed-statement
        # uses: digicert/scitt-action@v0.2
        uses: steveLasker/digicert-scitt-action@transparent-statement
        with:
          content-type: "application/vnd.unknown.attestation+json"
          datatrails-client_id: ${{ env.DATATRAILS_CLIENT_ID }}
          datatrails-client_secret: ${{ env.DATATRAILS_CLIENT_SECRET }}
          payload-file: "./buildOutput/attestation.json"
          payload-location: ${{ steps.upload-attestation.outputs.artifact-url }}
          subject: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - uses: actions/upload-artifact@v4
        with:
          name: attestation--transparent-statement
          path: transparent-statement.cbor
      - name: Create Output Directory
        # SPDX automatically creates the _manifest sub directories.
        # CycloneDX assumes the current directory
        # Creating a cyclonedx subdir, in addition to the ./buildOutput for SPDX
        run: |
          mkdir -p ./buildOutput/_manifest/cyclonedx/
      - name: Generate CycloneDX SBOM for Python
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: ./requirements.txt
          output: ./buildOutput/_manifest/cyclonedx/cyclone-dx.sbom.json
          format: json
      - name: Upload CycloneDX To Artifacts
        id: upload-cyclonedx-to-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cyclone-dx.sbom.json
          path: ./buildOutput/_manifest/cyclonedx/cyclone-dx.sbom.json
      - name: Register CylconeDX as a SCITT Signed Statement
        id: register-cyclonedx-signed-statement
        # uses: digicert/scitt-action@v0.2
        uses: steveLasker/digicert-scitt-action@transparent-statement
        with:
          content-type: "application/vnd.cyclonedx+json"
          datatrails-client_id: ${{ env.DATATRAILS_CLIENT_ID }}
          datatrails-client_secret: ${{ env.DATATRAILS_CLIENT_SECRET }}
          payload-file: "./buildOutput/_manifest/cyclonedx/cyclone-dx.sbom.json"
          payload-location: ${{ steps.upload-cyclonedx-to-artifacts.outputs.artifact-url }}
          subject: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - uses: actions/upload-artifact@v4
        with:
          name: cyclonedx--transparent-statement
          path: transparent-statement.cbor
      - name: Generate SPDX SBOM
        run: |
          curl -Lo $RUNNER_TEMP/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
          chmod +x $RUNNER_TEMP/sbom-tool
          $RUNNER_TEMP/sbom-tool generate -b ./buildOutput -bc . -pn synsation-web -pv 1.0.0 -ps synsation-org -nsb https://synsation.io -V Verbose -D true
      - name: list-spdx-files
        shell: bash
        run: |
          ls -a ./buildOutput/_manifest/spdx_2.2
      - name: Upload SPDX to Artifacts
        id: upload-spdx-to-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spdx.sbom.json
          path: ./buildOutput/_manifest/spdx_2.2/manifest.spdx.json
      - name: Register SPDX as a SCITT Signed Statement
        id: register-spdx-scitt-signed-statement
        uses: steveLasker/digicert-scitt-action@transparent-statement
        with:
          content-type: "application/spdx+json"
          datatrails-client_id: ${{ env.DATATRAILS_CLIENT_ID }}
          datatrails-client_secret: ${{ env.DATATRAILS_CLIENT_SECRET }}
          payload-file: "./buildOutput/_manifest/spdx_2.2/manifest.spdx.json"
          payload-location: ${{ steps.upload-spdx-to-artifacts.outputs.artifact-url }}
          subject: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - uses: actions/upload-artifact@v4
        with:
          name: spdx--transparent-statement
          path: transparent-statement.cbor
